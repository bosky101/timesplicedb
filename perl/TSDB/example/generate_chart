#!perl -w

use blib;
use TSDB;
use Data::Dumper;


# Usage: generate_chart [db] < <template> > <outputfile>
#
# Generates a random chart and plots it as HTML
# 
# Alternatively, if passed a tsdb as the first argument
# Generates the chart from that.
#
# The output file needs to have the javascript library from
# $(topdir)/html in the same directory
#

my $interval = 60;
my $time     = time() - 3600;
my $file     = shift @ARGV;

my $tsdb;
my $make = 0;
if ($file) {
	die "No such file\n" unless -f $file;
	$tsdb = TSDB->new($file);
} else {
    $tsdb = TSDB->new('testing.db', 
					      columns     => ['New Visits', 'Recurring Visits', 'Returning Visits'], 
						  name        => 'Count Of Visitors', 
					      resolution  => $interval,
						  clobber     => 1,
						  create_time => $time,
				        );
	$make = 1;
}

my $info     = $tsdb->info;
my @keys     = keys %{$info->{meta}};
my $cols     = $#keys;

goto TEMPLATE unless $make;

for my $i (0 .. $interval-1) {
	my $t    = $time + ($i*$interval);

	for my $col (0 .. $cols) { 
		my $v   = (log($i**2+1)   + rand(1.5)) * 10000 ;
		$tsdb->insert($col, $v, $t);
	}
} 

TEMPLATE:
my $template = join("", <>);
my $name     = $info->{name};
my $data     = "";
my $desc     = "";

if ($cols>0) {
	$desc = join(", ", @keys[0..$cols-1])." and ".$keys[-1];
} else {
	$desc = $keys[0];
}
$desc .= " over time.";

$data .= "<table id='data' class='data_field'>\n";
$data .= "\t<tr>\n\t\t";
$data .= "<th>Time</th>";
$data .= "<th>$_</th>" for @keys;
$data .= "\n\t</tr>\n";

my $range = $tsdb->range(0, $tsdb->last_row_idx);
for my $i (0..$range->rows) {
	$data .= "\t<tr>\n\t\t";
	$data .= "<td>".($time + ($i*$interval))."</td>";
	for my $col (0..$cols) {
		my $cell = $range->cell($col, $i);
		$data .= "<td>".$cell->{value}."</td>";
	}
	$data .= "\n\t</tr>\n";
}


$data .= "</table>";
$template    =~ s!%DESCRIPTION%!$desc!gsm;
$template    =~ s!%NAME%!$name!gsm;
$template    =~ s!%TABLE%!$data!gsm;

print $template;
